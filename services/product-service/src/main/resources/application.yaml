spring:
  application:
    name: product-service
  datasource:
    url: jdbc:postgresql://localhost:5432/product_service
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  liquibase:
    enabled: false
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin}
  data:
    jpa:
      repositories:
        enabled: true
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

server:
  port: 8082
  servlet:
    context-path: /api/products

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.sj.product_service: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: INFO

# JWT Configuration
jwt:
  issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/master}
  audience: ${JWT_AUDIENCE:product-service}
  secret: ${JWT_SECRET:your-secret-key-here-make-it-long-and-secure}
  expiration: 86400000

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

# AWS/MinIO S3
aws:
  s3:
    bucket: ${AWS_S3_BUCKET:product-images}
    endpoint: ${AWS_S3_ENDPOINT:http://localhost:9000}
  cloudfront:
    domain: ${CLOUDFRONT_DOMAIN:cdn.local.test}

# Product Service
product:
  image:
    upload:
      max-size: 10MB
      allowed-types: jpg,jpeg,png,gif
  pagination:
    default-size: 20
    max-size: 100

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
